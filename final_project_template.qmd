---
title: "Final Project Template"
author: Sam Lee
output: pdf_document
---

```{=html}
<style type="text/css">
h1.title {
font-size: 40px;
text-align: center;
}
h4.author {
font-size: 40px;
text-align: center;
}
</style>
```
\newpage

```{r setup, include=FALSE}
library(tidyverse)
library(lubridate)
library(GGally)
library(corrplot)
library(patchwork)
library(car)
library(ggfortify)
library(alr4)
library(glmnet)
set.seed(12022023)

seoul <- read.csv("SeoulBikeData.csv", header=F, skip=1) %>% setNames(
  c("Date", "RentedBikeCount", "Hour", "Temperature", "Humidity", "WindSpeed",
    "Visibility", "DewPointTemp", "SolarRadiation", "Rainfall", "Snowfall",
    "Seasons", "Holiday", "FunctioningDay")
) %>% as_tibble() %>%
  mutate(
    Date = dmy(Date),
    IsAutumn = Seasons == "Autumn",
    IsSummer = Seasons == "Summer",
    IsWinter = Seasons == "Winter",
    IsSpring = Seasons == "Spring",
    Hour09 = Hour %in% 0:9,
    Hour1015 = Hour %in% 10:15,
    Hour1624 = Hour %in% 16:24,
    TempChange = Temperature-lag(Temperature, n=1)
  )

seoul = seoul[2:nrow(seoul),]
```

# Abstract

Here, you will briefly summarize the entire report, including the data used, questions of interest, and relevant findings.

# 1 Problem and Motivation

In this section, you will describe the background information about the study that is necessary to understand why the data are important. In other words, why was it important to gather the data in the first place?

## 1.1 Data Description

[Seoul Bike Sharing Data](https://archive.ics.uci.edu/dataset/560/seoul+bike+sharing+demand)

Briefly state the source of your data and describe the relevant variables that **you will use** in your project. Include important details such as units for the different variables, and what the \`\`observational units" (rows in the data set) represent (e.g., individuals, countries, etc.)

## 1.2 Questions of Interest

Briefly and clearly state the two main questions that you will investigate throughout the report. These questions should be stated in scientific, and not statistical language. For example, "Is the slope of log of per capita GDP significantly different from zero?" should instead by give as "Does the log of per capita GDP have an effect on the average life expectancy of females in a given country?"

## 1.3 Regression Methods

For each question of interest listed in Section 2, describe what regression models, techniques, and tools you will use to fully answer it. These should include any plots you will use for exploratory analysis or diagnostic checks, as well as methods of inference you will use.

# 2 Analyses, Results, and Interpretation

Conduct the analysis in a logical fashion, including necessary code (and not any superfluous code) and its output. Give simple interpretations of your findings related to the questions of interest.

Took out Dew Point Temp

```{r}
seoul.factors = c("TempChange", "Hour09", "Hour1015", "Hour1624", "Humidity",
                  "WindSpeed", "Visibility", "SolarRadiation", "Rainfall",
                  "Snowfall", "IsWinter", "IsSpring", "IsSummer", "IsAutumn")

seoul.interaction = c()
seoul.base = c("Hour1624", "IsAutumn", "SolarXIsAutumn")

seasons = c("Winter", "Spring", "Summer", "Autumn")


for(season in seasons){
  factor = str_c("SolarX", str_c("Is", season))
  seoul[factor] = seoul[str_c("Is", season)]*seoul$SolarRadiation
  seoul.factors = c(seoul.factors, factor)
  seoul.interaction = c(seoul.interaction, factor)
}

hours = c("Hour09", "Hour1015")
for(hour in hours){
  factor = str_c("SolarX", hour)
  seoul.factors = c(seoul.factors, factor)
  seoul[factor] = seoul$SolarRadiation*seoul[hour]
  seoul.interaction = c(seoul.interaction, factor)
}
```

```{r message=FALSE}
ggpairs(seoul[seoul.factors])
corrplot(cor(seoul[seoul.factors]), type = "upper")

seoul %>% ggplot()+
  geom_point(aes(x=Hour, y=TempChange))+
  facet_grid(~Seasons)

corrplot(cor(seoul[c("TempChange", str_c("SolarXIs", seasons), str_c("Is", seasons))]), type="upper")
```

```{r}
seoul.lm <- lm(TempChange ~ ., data = seoul[setdiff(seoul.factors, c(seoul.interaction, seoul.base))])

summary(seoul.lm)

seoul$residuals <- seoul.lm$residuals
```

```{r}

```

```{r}
avPlots(seoul.lm)
```

```{r}
autoplot(seoul.lm) + 
  theme(aspect.ratio = 1)
```

```{r}
cd_cont_pos <- function(leverage, level, model) {
  sqrt(level * length(coef(model)) * (1 - leverage) / leverage)
}
cd_cont_neg <- function(leverage, level, model) {
  -cd_cont_pos(leverage, level, model)
}

cd_threshold <- 0.5
cd_threshold2 <- 4 / (nrow(seoul) - 2)
x_max_val <- 0.35

autoplot(seoul.lm, which = 5, nrow = 1, ncol = 1) +
  theme(aspect.ratio = 1) +
  stat_function(fun = cd_cont_pos,
                args = list(level = cd_threshold, model = seoul.lm),
                xlim = c(0, x_max_val), lty = 2, colour = "#FFACEE") +
  stat_function(fun = cd_cont_neg,
                args = list(level = cd_threshold, model = seoul.lm),
                xlim = c(0, x_max_val), lty = 2, colour = "#FFACEE") +
  stat_function(fun = cd_cont_pos,
                args = list(level = cd_threshold2, model = seoul.lm),
                xlim = c(0, x_max_val), lty = 2, colour = "#AFDFFF") +
  stat_function(fun = cd_cont_neg,
                args = list(level = cd_threshold2, model = seoul.lm),
                xlim = c(0, x_max_val), lty = 2, colour = "#AFDFFF")
```

```{r}
t = seoul %>% filter(Rainfall > 0)
# t$Rainfall = t$Rainfall^1.5
invTranPlot(TempChange ~ Rainfall, data=t, lambda = c(-1, -0.5, 0, 0.5, 1), optimal=T)
bc = boxCox(t$TempChange+abs(min(t$TempChange))+1 ~ t$Rainfall)
lambda = bc$x[which(bc$y == max(bc$y))]
lambda
t$TempChange = t$TempChange+abs(min(t$TempChange))+1
t$TempChange = t$TempChange^2

t %>% ggplot()+
  geom_point(aes(x=Rainfall, y=TempChange))
invTranPlot(TempChange ~ Rainfall, data=t, lambda = c(-1, -0.5, 0, 0.5, 1), optimal=T)

t = seoul %>% filter(Snowfall > 0)
invTranPlot(TempChange ~ Snowfall, data=t, lambda = c(-1, -0.5, 0, 0.5, 1), optimal=T)
t %>% ggplot()+
  geom_point(aes(x=sqrt(Snowfall), y=TempChange))

snowfall.lm = lm(TempChange ~ Snowfall, data=t)
summary(snowfall.lm)

seoul %>% mutate(
  Snowfall = ifelse(
    Snowfall == 0, 0,
    predict(snowfall.lm, seoul)
  )
)

RainThreshold = 5

seoul %>% mutate(
  IsRaining = Rainfall >= RainThreshold,
  IsSnowing = ifelse(
    Snowfall == 0, 0,
    predict(snowfall.lm, seoul)
  )
)
```

```{r}
for(effect in weather_effects){
  for(hour in hours){
    factor = str_c(effect, "X", hour)
    seoul.factors = c(seoul.factors, factor)
    seoul[factor] = seoul[effect]*seoul[hour]
    seoul.interaction = c(seoul.interaction, factor)
  }
}
```

Test assumptions

```{r}
seoul.interaction.lm = lm(TempChange ~ ., seoul[setdiff(seoul.factors, seoul.base)])
seoul$interaction.residuals = seoul.interaction.lm$residuals
summary(seoul.interaction.lm)
```

```{r}
# resid_vs_hour09 <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = Hour09, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_hour1015 <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = Hour1015, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_humidity <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = Humidity, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_windspeed <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = WindSpeed, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_visibility <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = Visibility, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_solarradiation <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = SolarRadiation, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_rainfall <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = Rainfall, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_snowfall <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = Snowfall, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_issummer <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = IsSummer, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_iswinter <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = IsWinter, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_isspring <- ggplot(data = seoul) +
#   geom_point(mapping = aes(x = IsSpring, y = interaction.residuals)) +
#   theme(aspect.ratio = 1)
# 
# resid_vs_hour09
# resid_vs_hour1015
# resid_vs_humidity
# resid_vs_windspeed
# resid_vs_visibility
# resid_vs_solarradiation
# resid_vs_rainfall
# resid_vs_snowfall
# resid_vs_issummer
# resid_vs_iswinter
# resid_vs_isspring
```

```{r}
seoul.x = as.matrix(seoul[setdiff(seoul.factors, c(seoul.base, "TempChange"))])
seoul.y = as.matrix(seoul["TempChange"])

lasso_cv <- cv.glmnet(x = seoul.x,
                        y = seoul.y, 
                        type.measure = "mse", 
                        alpha = 1)

model.factors = setdiff(seoul.factors, c(seoul.base, "TempChange"))

d = coef(lasso_cv, s = "lambda.1se")[2:(length(model.factors)-1)]
lasso.factors = model.factors[which(d != 0)]
length(lasso.factors)

seoul.lasso = lm(TempChange ~ ., seoul[c("TempChange", lasso.factors)])
summary(seoul.lasso)

seoul.base.model = lm(TempChange ~ 1, seoul)

seoul.stepwise.bic = step(seoul.base.model,
                          direction="both",
                          k = log(nrow(seoul)),
                          scope=list(lower=seoul.base.model,
                                     upper=seoul.interaction.lm))
summary(seoul.stepwise.bic)

seoul$step.residuals = seoul.stepwise.bic$residuals
```

```{r}
resid_vs_hour09 <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = Hour09, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_hour1015 <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = Hour1015, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_humidity <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = Humidity, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_windspeed <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = WindSpeed, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_solarradiation <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = SolarRadiation, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_rainfall <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = Rainfall, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_snowfall <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = Snowfall, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_issummer <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = IsSummer, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_iswinter <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = IsWinter, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_isspring <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = IsSpring, y = step.residuals)) +
  theme(aspect.ratio = 1)

### Interaction Effects

resid_vs_sxh10 <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = SolarXHour1015, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_sxs <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = SolarXIsSummer, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_sxh09 <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = SolarXHour09, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_hxh09 <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = HumidityXHour09, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_sxw <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = SolarXIsWinter, y = step.residuals)) +
  theme(aspect.ratio = 1)

resid_vs_sxsp <- ggplot(data = seoul) +
  geom_point(mapping = aes(x = SolarXIsSpring, y = step.residuals)) +
  theme(aspect.ratio = 1)


resid_vs_hour09
resid_vs_hour1015
resid_vs_humidity
resid_vs_windspeed
resid_vs_solarradiation
resid_vs_rainfall
resid_vs_snowfall
resid_vs_issummer
resid_vs_iswinter
resid_vs_isspring

resid_vs_sxh09
resid_vs_sxh10
resid_vs_sxs
resid_vs_sxsp
resid_vs_sxw
resid_vs_hxh09
```

```{r}
autotplots = autoplot(seoul.lasso)
autoplots
```

# 3 Conclusions

$\Delta \text{Temperature}_t = \beta_0 + \beta_1I(0\leq\text{Hour}_t<10) + \beta_2I(10\leq\text{Hour}_t<16) + \beta_3\text{Humidity}_t + \beta_4\text{WindSpeed}_t + \beta_5\text{Visibility}_t + \beta_6\text{SolarRadiation}_t + \beta_7\text{Snowfall}_t +\beta_8I(\text{Season}_t = \text{Winter}) + \beta_9I(\text{Season}_t = \text{Summer}) + \beta_{10}\text{SolarRadiation}_tI(\text{Season}_t = \text{Spring}) + \beta_{11}\text{SolarRadiation}_tI(\text{Season}_t = \text{Winter}) + \beta_{12}\text{SolarRadiation}_tI(\text{Season}_t = \text{Summer}) + \beta_{13}\text{SolarRadiation}_tI(0\leq\text{Hour}_t<10) + \beta_{14}\text{WindSpeed}_tI(0\leq\text{Hour}_t<10) + \beta_{15}\text{WindSpeed}_tI(10\leq\text{Hour}_t<15) + \beta_{16}\text{Visibility}_tI(0\leq\text{Hour}_t<10) + \beta{17}\text{Rainfall}_tI(0\leq\text{Hour}_t<10) + \beta{18}\text{Rainfall}_tI(11\leq\text{Hour}_t<16) + \beta{19}\text{Snowfall}_tI(0\leq\text{Hour}_t<10) + \epsilon_i$

$\epsilon_i \overset{iid}{\sim} N(0, \sigma^2)$

Give additional context to you results and interpretations from Section 5 with respect to the data set and its purpose. Describe any potential weaknesses in your analysis, and how they may affect the reliability of the results.

```{r}

seoul %>%
  ggplot()+
  geom_line(aes(x=Date, y=TempChange, color="Actual"))+
  geom_line(aes(x=Date, y=predict(seoul.lasso, seoul), color="Predicted"))

```

# 4 Contributions

For each member of the group, write a short paragraph describing their contribution to this project and the report. It is up to you to decide how to divide up the work, so long as everyone is contributing approximately equally.

## APPENDIX

If there are any analyses, such as exploratory plots/summaries or work you did to determine appropriate transformations, or any relevant material that does not belong in one of the sections above, these can go in the Appendix. If you don't have any material like this, you can remove this section.
